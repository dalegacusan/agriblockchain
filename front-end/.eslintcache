[{"C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\index.js":"1","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\LandingPage\\LandingPage.js":"2","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\Farmers\\FarmersList.js":"3","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\Farmers\\Farmers.js":"4","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\App\\App.js":"5","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\LoadingScreen\\LoadingScreen.js":"6"},{"size":708,"mtime":1606746451670,"results":"7","hashOfConfig":"8"},{"size":652,"mtime":1606747958109,"results":"9","hashOfConfig":"8"},{"size":847,"mtime":1606749183322,"results":"10","hashOfConfig":"8"},{"size":1936,"mtime":1606748739567,"results":"11","hashOfConfig":"8"},{"size":629,"mtime":1606746451658,"results":"12","hashOfConfig":"8"},{"size":620,"mtime":1606749170131,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9vme9s",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\index.js",[],["30","31"],"C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\LandingPage\\LandingPage.js",["32","33","34"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport MaterialLink from '@material-ui/core/Link';\r\n\r\nfunction LandingPage() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Hello world!</h1>\r\n            <h3>This page is a work in progress</h3>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n                <MaterialLink component={Link} color=\"inherit\" to=\"/farmers\">\r\n                    View Farmers\r\n                </MaterialLink>\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\Farmers\\FarmersList.js",["35"],"import React, { useState, useEffect } from \"react\";\r\nimport Farmers from \"./Farmers\";\r\nimport LoadingScreen from '../LoadingScreen/LoadingScreen';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction FarmersList() {\r\n\r\n  const [farmers, setFarmers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/farmers')\r\n      .then(res => {\r\n        setFarmers([...farmers, ...res.data]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        farmers.length !== 0\r\n          ?\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={2}>\r\n              <Farmers farmers={farmers} />\r\n              {/* Will change to actual grid items per farmers next time */}\r\n            </Grid>\r\n          </Grid>\r\n          : <LoadingScreen />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FarmersList;\r\n","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\Farmers\\Farmers.js",["36"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    margin: \"20px\"\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function Farmers(props) {\r\n  const { farmers } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        farmers.map(farmer => {\r\n          const { id, firstName, lastName, lastOnline, location, preferredModeOfCommunication, produce } = farmer;\r\n          return (\r\n\r\n            <Card key={id} className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                  {lastOnline}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {firstName} {lastName}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                  {location}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {\r\n                    produce.map((produce, i) => {\r\n                      return (\r\n                        <span key={i}>{produce}, </span>\r\n                      );\r\n                    })\r\n                  }\r\n                  <br />\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\">Choose this farmer</Button>\r\n              </CardActions>\r\n            </Card>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\App\\App.js",["37","38","39","40"],"C:\\Users\\Workstation\\Desktop\\Blockchain Development Program\\agriblockchain\\front-end\\src\\components\\LoadingScreen\\LoadingScreen.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"50","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":16,"column":6,"nodeType":"53","endLine":16,"endColumn":8,"suggestions":"54"},{"ruleId":"45","severity":1,"message":"55","line":31,"column":66,"nodeType":"47","messageId":"48","endLine":31,"endColumn":94},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"50","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":13},{"ruleId":"45","severity":1,"message":"56","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":15},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'farmers'. Either include it or remove the dependency array. You can also do a functional update 'setFarmers(f => ...)' if you only need 'farmers' in the 'setFarmers' call.","ArrayExpression",["59"],"'preferredModeOfCommunication' is assigned a value but never used.","'Farmers' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [farmers]",{"range":"62","text":"63"},[437,439],"[farmers]"]